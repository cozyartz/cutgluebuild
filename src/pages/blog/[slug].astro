---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import ReadingProgress from '../../components/blog/ReadingProgress.astro';
import TableOfContents from '../../components/blog/TableOfContents.astro';
import SocialShare from '../../components/blog/SocialShare.astro';
import NewsletterSignup from '../../components/blog/NewsletterSignup.astro';
import { getAllPosts, formatDate } from '../../lib/blog';

export async function getStaticPaths() {
  const blogEntries = await getAllPosts();
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const currentUrl = new URL(Astro.url.pathname, Astro.site);

// Get related posts (same tags)
const allPosts = await getAllPosts();
const relatedPosts = allPosts
  .filter(post => 
    post.slug !== entry.slug && 
    post.data.tags?.some(tag => entry.data.tags?.includes(tag))
  )
  .slice(0, 2);
---

<Layout 
  title={`${entry.data.title} - CutGlueBuild`} 
  description={entry.data.excerpt} 
  image={entry.data.featured_image}
  type="article"
>
  <Header />
  <ReadingProgress />
  
  <main class="pt-20 min-h-screen bg-gray-50 dark:bg-gray-900">
    <!-- Hero Section -->
    <div class="blog-hero">
      <div class="blog-post-header">
        {entry.data.featured_image && (
          <div class="mb-12 max-w-5xl mx-auto px-4">
            <img 
              src={entry.data.featured_image} 
              alt={entry.data.title}
              class="w-full h-64 md:h-96 object-cover rounded-2xl shadow-2xl"
            />
          </div>
        )}
        
        <!-- Tags -->
        {entry.data.tags && entry.data.tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2 mb-8">
            {entry.data.tags.map(tag => (
              <span class="px-4 py-2 bg-gradient-to-r from-primary-100 to-secondary-100 dark:from-primary-900 dark:to-secondary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium shadow-lg">
                #{tag}
              </span>
            ))}
          </div>
        )}
        
        <!-- Title -->
        <h1 class="blog-post-title">
          {entry.data.title}
        </h1>
        
        <!-- Excerpt -->
        {entry.data.excerpt && (
          <p class="blog-post-excerpt">
            {entry.data.excerpt}
          </p>
        )}
        
        <!-- Meta -->
        <div class="blog-post-meta">
          <div class="meta-badge">
            <svg class="w-5 h-5 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            <span>{entry.data.author}</span>
          </div>
          
          <div class="meta-badge">
            <svg class="w-5 h-5 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span>{formatDate(entry.data.published_at)}</span>
          </div>
          
          {entry.data.reading_time && (
            <div class="meta-badge">
              <svg class="w-5 h-5 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>{entry.data.reading_time} min read</span>
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- Article Content -->
    <div class="blog-article">
      <!-- Table of Contents -->
      <TableOfContents headings={headings} />

      <!-- Main Content -->
      <div class="blog-content-wrapper">
        <div class="blog-content prose prose-lg dark:prose-invert max-w-none">
          <Content />
        </div>
      </div>

      <!-- Social Share -->
      <SocialShare 
        title={entry.data.title}
        url={currentUrl.toString()}
        excerpt={entry.data.excerpt}
      />

      <!-- Author Bio -->
      <div class="author-bio">
        <div class="flex items-center space-x-6">
          <div class="w-20 h-20 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-full flex items-center justify-center text-white text-2xl font-bold shadow-lg">
            {entry.data.author.charAt(0)}
          </div>
          <div>
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2">{entry.data.author}</h3>
            <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
              Part of the CutGlueBuild team, passionate about helping makers bring their ideas to life through laser cutting and digital fabrication. Always exploring new techniques and sharing knowledge with the community.
            </p>
            <div class="flex space-x-4 mt-4">
              <a href="#" class="text-primary-500 hover:text-primary-600 transition-colors">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
              <a href="#" class="text-primary-500 hover:text-primary-600 transition-colors">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Related Posts -->
      {relatedPosts.length > 0 && (
        <div class="mt-20">
          <div class="text-center mb-12">
            <h3 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">Related Articles</h3>
            <div class="w-24 h-1 bg-gradient-to-r from-primary-500 to-secondary-500 mx-auto rounded-full"></div>
          </div>
          <div class="related-posts">
            {relatedPosts.map(post => (
              <div class="related-post">
                {post.data.featured_image && (
                  <img 
                    src={post.data.featured_image} 
                    alt={post.data.title}
                    class="w-full h-40 object-cover rounded-lg mb-4"
                  />
                )}
                <h4 class="text-xl font-bold text-gray-900 dark:text-white mb-3">
                  <a href={`/blog/${post.slug}`} class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                    {post.data.title}
                  </a>
                </h4>
                <p class="text-gray-600 dark:text-gray-300 text-sm mb-4 leading-relaxed">{post.data.excerpt}</p>
                <div class="flex items-center text-xs text-gray-500 dark:text-gray-500">
                  <span>{formatDate(post.data.published_at)}</span>
                  {post.data.reading_time && (
                    <>
                      <span class="mx-2">â€¢</span>
                      <span>{post.data.reading_time} min read</span>
                    </>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      <!-- Newsletter Signup -->
      <NewsletterSignup />
    </div>
  </main>

  <Footer />
</Layout>

<style>
  @import '../../styles/blog.css';
</style>

<script>
  // Scroll reveal animation
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('revealed');
      }
    });
  }, observerOptions);

  // Observe all elements that should animate on scroll
  document.querySelectorAll('.scroll-reveal').forEach(el => {
    observer.observe(el);
  });

  // Add copy code functionality
  document.querySelectorAll('pre').forEach(pre => {
    const button = document.createElement('button');
    button.className = 'copy-code-button';
    button.textContent = 'Copy';
    button.onclick = () => {
      const code = pre.querySelector('code');
      if (code) {
        navigator.clipboard.writeText(code.textContent || '');
        button.textContent = 'Copied!';
        setTimeout(() => {
          button.textContent = 'Copy';
        }, 2000);
      }
    };
    pre.style.position = 'relative';
    pre.appendChild(button);
  });

  // Enhanced scroll effects
  let ticking = false;
  
  function updateScrollEffects() {
    const scrolled = window.pageYOffset;
    const rate = scrolled * -0.5;
    
    // Parallax effect for hero background
    const hero = document.querySelector('.blog-hero');
    if (hero) {
      hero.style.transform = `translateY(${rate}px)`;
    }
    
    ticking = false;
  }
  
  function requestTick() {
    if (!ticking) {
      requestAnimationFrame(updateScrollEffects);
      ticking = true;
    }
  }
  
  window.addEventListener('scroll', requestTick);
</script>