---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog', ({ data }) => {
    return data.published !== false;
  });
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

if (!entry) {
  return Astro.redirect('/blog/');
}

const { Content } = await entry.render();
---

<Layout title={`${entry.data.title} - CutGlueBuild`} description={entry.data.excerpt} image={entry.data.featured_image}>
  <Header />
  
  <!-- Reading Progress Bar -->
  <div class="reading-progress" id="reading-progress"></div>
  
  <main class="pt-20 min-h-screen bg-gray-50 dark:bg-gray-900">
    <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Article Header -->
      <header class="mb-12 text-center">
        <!-- Featured Image -->
        {entry.data.featured_image && (
          <div class="mb-8">
            <img
              src={entry.data.featured_image} 
              alt={entry.data.title}
              class="w-full h-64 md:h-96 object-cover rounded-2xl shadow-xl"
            />
          </div>
        )}
        
        <!-- Title -->
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4 leading-tight">
          {entry.data.title}
        </h1>
        
        <!-- Excerpt -->
        <p class="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
          {entry.data.excerpt}
        </p>
        
        <!-- Meta Information -->
        <div class="blog-meta">
          <div class="blog-meta-item">
            <svg class="blog-meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span>{new Date(entry.data.published_at).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</span>
          </div>
          
          
          {entry.data.author && (
            <div class="blog-meta-item">
              <svg class="blog-meta-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>{entry.data.author}</span>
            </div>
          )}
        </div>
        
        <!-- Tags -->
        {entry.data.tags && entry.data.tags.length > 0 && (
          <div class="blog-tags">
            {entry.data.tags.map((tag: string) => (
              <span class="blog-tag">{tag}</span>
            ))}
          </div>
        )}
      </header>

      <!-- Article Content -->
      <div class="blog-content">
        <Content />
      </div>
      
      <!-- Social Sharing -->
      <div class="social-share">
        <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Share this article:</span>
        <a 
          href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(entry.data.title)}&url=${encodeURIComponent(Astro.url.toString())}`}
          target="_blank" 
          rel="noopener noreferrer"
          class="social-share-button social-share-twitter"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
          </svg>
          <span>Twitter</span>
        </a>
        <a 
          href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.toString())}`}
          target="_blank" 
          rel="noopener noreferrer"
          class="social-share-button social-share-facebook"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
          </svg>
          <span>Facebook</span>
        </a>
        <a 
          href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
          target="_blank" 
          rel="noopener noreferrer"
          class="social-share-button social-share-linkedin"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
          <span>LinkedIn</span>
        </a>
      </div>

      <!-- Newsletter Signup -->
      <div class="newsletter-signup">
        <h3>Stay Updated</h3>
        <p>Get the latest maker tips and project ideas delivered to your inbox.</p>
        <form>
          <input type="email" placeholder="Enter your email address" required />
          <button type="submit">Subscribe</button>
        </form>
      </div>
    </article>
  </main>

  <Footer />
</Layout>

<script>
  // Reading progress indicator
  function updateReadingProgress() {
    const article = document.querySelector('article');
    const progressBar = document.getElementById('reading-progress');
    
    if (!article || !progressBar) return;
    
    const scrollTop = window.scrollY;
    const docHeight = article.offsetHeight;
    const winHeight = window.innerHeight;
    const scrollPercent = (scrollTop / (docHeight - winHeight)) * 100;
    
    progressBar.style.width = Math.min(Math.max(scrollPercent, 0), 100) + '%';
  }
  
  // Update on scroll
  window.addEventListener('scroll', updateReadingProgress);
  window.addEventListener('resize', updateReadingProgress);
  
  // Social sharing analytics (placeholder)
  document.querySelectorAll('.social-share-button').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.currentTarget as HTMLElement;
      const platform = target.classList.contains('social-share-twitter') ? 'twitter' :
                      target.classList.contains('social-share-facebook') ? 'facebook' : 'linkedin';
      
      // Track social share (placeholder for analytics)
      console.log(`Shared on ${platform}`);
    });
  });
  
  // Newsletter form handling
  const newsletterForm = document.querySelector('.newsletter-signup form');
  if (newsletterForm) {
    newsletterForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const form = e.target as HTMLFormElement;
      const emailInput = form.querySelector('input[type="email"]') as HTMLInputElement;
      const email = emailInput.value;
      
      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }),
        });

        const result = await response.json();

        if (response.ok) {
          alert(result.message);
          form.reset();
        } else {
          alert(result.error || 'Failed to subscribe. Please try again.');
        }
      } catch (error) {
        console.error('Newsletter signup error:', error);
        alert('Failed to subscribe. Please try again later.');
      }
    });
  }
</script>