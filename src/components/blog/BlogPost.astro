---
import type { CollectionEntry } from 'astro:content';
import { formatDate } from '../../lib/blog';

interface Props {
  post: CollectionEntry<'blog'>;
  showExcerpt?: boolean;
  featured?: boolean;
  compact?: boolean;
  layout?: 'card' | 'list';
}

const { post, showExcerpt = true, featured = false, compact = false, layout = 'card' } = Astro.props;
---

{layout === 'card' && (
  <article class={`blog-card ${featured ? 'blog-card-featured' : ''} ${compact ? 'compact' : ''}`}>
    {post.data.featured_image && (
      <div class="blog-card-image">
        <img 
          src={post.data.featured_image} 
          alt={post.data.title}
          loading="lazy"
        />
        <div class="image-overlay"></div>
        {featured && (
          <div class="featured-badge">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3l14 9-14 9V3z"></path>
            </svg>
            Featured
          </div>
        )}
      </div>
    )}
    
    <div class="blog-card-content">
      <div class="blog-card-meta">
        <time datetime={post.data.published_at} class="meta-item">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          {formatDate(post.data.published_at)}
        </time>
        
        {post.data.reading_time && (
          <span class="meta-item">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {post.data.reading_time} min read
          </span>
        )}
        
        <span class="meta-item">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
          </svg>
          {post.data.author}
        </span>
      </div>
      
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="blog-card-tags">
          {post.data.tags.slice(0, 3).map(tag => (
            <span class="blog-card-tag">
              #{tag}
            </span>
          ))}
        </div>
      )}

      <h2 class="blog-card-title">
        <a href={`/blog/${post.slug}`} class="title-link">
          {post.data.title}
        </a>
      </h2>

      {showExcerpt && post.data.excerpt && (
        <p class="blog-card-excerpt">
          {post.data.excerpt}
        </p>
      )}

      <div class="blog-card-footer">
        <a href={`/blog/${post.slug}`} class="blog-card-read-more">
          <span>Read Article</span>
          <svg class="read-more-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
        
        <div class="engagement-stats">
          <button class="stat-button">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
            </svg>
            <span>42</span>
          </button>
          <button class="stat-button">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
            <span>12</span>
          </button>
        </div>
      </div>
    </div>
  </article>
)}

{layout === 'list' && (
  <article class="blog-list-item">
    <div class="list-content">
      {post.data.featured_image && (
        <div class="list-image">
          <img 
            src={post.data.featured_image} 
            alt={post.data.title}
            loading="lazy"
          />
        </div>
      )}
      
      <div class="list-text">
        <div class="blog-card-meta">
          <time datetime={post.data.published_at} class="meta-item">
            {formatDate(post.data.published_at)}
          </time>
          {post.data.reading_time && (
            <span class="meta-item">{post.data.reading_time} min read</span>
          )}
        </div>
        
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="blog-card-tags">
            {post.data.tags.slice(0, 2).map(tag => (
              <span class="blog-card-tag">#{tag}</span>
            ))}
          </div>
        )}

        <h2 class="list-title">
          <a href={`/blog/${post.slug}`} class="title-link">
            {post.data.title}
          </a>
        </h2>

        {post.data.excerpt && (
          <p class="list-excerpt">
            {post.data.excerpt}
          </p>
        )}

        <a href={`/blog/${post.slug}`} class="blog-card-read-more">
          <span>Read More</span>
          <svg class="read-more-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
    </div>
  </article>
)}

<style>
  .blog-card {
    @apply bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700 transition-all duration-500 hover:shadow-2xl hover:scale-105 group;
    transform-origin: center;
  }
  
  .blog-card-featured {
    @apply ring-2 ring-primary-500/50 relative;
    background: linear-gradient(135deg, rgba(249, 115, 22, 0.02), rgba(59, 130, 246, 0.02));
  }
  
  .blog-card-image {
    @apply relative overflow-hidden h-56;
    background: linear-gradient(45deg, theme('colors.primary.100'), theme('colors.secondary.100'));
  }
  
  .blog-card-featured .blog-card-image {
    @apply h-64;
  }
  
  .blog-card-image img {
    @apply w-full h-full object-cover transition-transform duration-700 group-hover:scale-110;
  }
  
  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(249, 115, 22, 0.1), rgba(59, 130, 246, 0.1));
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .blog-card:hover .image-overlay {
    opacity: 1;
  }
  
  .featured-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: linear-gradient(135deg, theme('colors.primary.500'), theme('colors.secondary.500'));
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    z-index: 10;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  .blog-card-content {
    @apply p-6;
  }
  
  .blog-card-featured .blog-card-content {
    @apply p-8;
  }
  
  .blog-card-meta {
    @apply flex flex-wrap items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-4;
  }
  
  .meta-item {
    @apply flex items-center gap-1;
  }
  
  .blog-card-tags {
    @apply flex flex-wrap gap-2 mb-4;
  }
  
  .blog-card-tag {
    @apply px-3 py-1 bg-gradient-to-r from-primary-100 to-secondary-100 dark:from-primary-900 dark:to-secondary-900 text-primary-800 dark:text-primary-200 rounded-full text-xs font-medium transition-all duration-300 hover:scale-105;
  }
  
  .blog-card-title {
    @apply text-xl font-bold text-gray-900 dark:text-white mb-4 leading-tight;
  }
  
  .blog-card-featured .blog-card-title {
    @apply text-2xl;
  }
  
  .title-link {
    @apply hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300;
    background: linear-gradient(135deg, theme('colors.primary.500'), theme('colors.secondary.500'));
    background-size: 0% 2px;
    background-repeat: no-repeat;
    background-position: left bottom;
    transition: background-size 0.3s ease;
  }
  
  .title-link:hover {
    background-size: 100% 2px;
  }
  
  .blog-card-excerpt {
    @apply text-gray-600 dark:text-gray-300 text-sm mb-6 leading-relaxed;
  }
  
  .blog-card-footer {
    @apply flex items-center justify-between;
  }
  
  .blog-card-read-more {
    @apply text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium text-sm transition-all duration-300 inline-flex items-center group/link;
  }
  
  .read-more-arrow {
    @apply w-4 h-4 ml-2 group-hover/link:translate-x-1 transition-transform duration-300;
  }
  
  .engagement-stats {
    @apply flex items-center space-x-3;
  }
  
  .stat-button {
    @apply flex items-center space-x-1 text-xs text-gray-500 dark:text-gray-500 hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-300;
  }
  
  .compact .blog-card-content {
    @apply p-4;
  }
  
  .compact .blog-card-title {
    @apply text-lg;
  }
  
  .compact .blog-card-image {
    @apply h-40;
  }
  
  /* List Layout Styles */
  .blog-list-item {
    @apply bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 hover:shadow-xl;
  }
  
  .list-content {
    @apply flex flex-col md:flex-row;
  }
  
  .list-image {
    @apply md:w-1/3 h-48 md:h-auto overflow-hidden;
  }
  
  .list-image img {
    @apply w-full h-full object-cover transition-transform duration-300 hover:scale-105;
  }
  
  .list-text {
    @apply md:w-2/3 p-6 flex flex-col justify-between;
  }
  
  .list-title {
    @apply text-xl font-bold text-gray-900 dark:text-white mb-3 leading-tight;
  }
  
  .list-excerpt {
    @apply text-gray-600 dark:text-gray-300 text-sm mb-4 leading-relaxed flex-1;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .blog-card-meta {
      @apply flex-col items-start gap-2;
    }
    
    .blog-card-footer {
      @apply flex-col items-start gap-3;
    }
    
    .engagement-stats {
      @apply self-end;
    }
  }
  
  /* Animation for cards */
  @keyframes cardFloat {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-5px);
    }
  }
  
  .blog-card:hover {
    animation: cardFloat 2s ease-in-out infinite;
  }
</style>